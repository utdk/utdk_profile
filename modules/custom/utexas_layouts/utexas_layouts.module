<?php

/**
 * @file
 * Preprocess settings for available layout configuration.
 */

use Drupal\Core\Block\BlockPluginInterface;
use Drupal\Core\Form\FormStateInterface;
use Drupal\utexas_layouts\UtexasLayoutBuilderHelper;

/**
 * Implements hook_preprocess_layout().
 */
function utexas_layouts_preprocess_layout(&$variables) {
  if (isset($variables['content']['#background_image'])) {
    // Send background image to the template as a separate variable.
    $variables['background_image'] = $variables['content']['#background_image'];
  }
}

/**
 * Implements hook_preprocess_page().
 */
function utexas_layouts_preprocess_page(&$variables) {
  $variables['#attached']['library'][] = 'utexas_layouts/layout_builder_ui';
}

/**
 * Implements hook_plugin_filter_TYPE_alter().
 *
 * Suppress display of system blocks in Block Library & Layout Builder
 * when menu_blocks equivalents are present.
 */
function utexas_layouts_plugin_filter_block_alter(array &$definitions, array $extra, $consumer) {
  if (in_array($consumer, ['block_ui', 'layout_builder'])) {
    foreach ($definitions as $id => $definition) {
      // Is this a core-provided menu block?
      if ($definition['provider'] === 'system' && strpos($id, 'system_menu_block:') !== FALSE) {
        // Extract the machine name of the menu.
        $split_system_block_name = explode(':', $id);
        // Generate the menu_block equivalent key to compare.
        $menu_block_name = 'menu_block:' . $split_system_block_name[1];
        // If a menu_block equivalent exists, suppress the core menu from
        // being displayed as an available option.
        if (array_search($menu_block_name, array_keys($definitions)) !== FALSE) {
          unset($definitions[$id]);
        }
      }
    }
  }
}

/**
 * Implements hook_form_BASE_FORM_ID_alter() for layout_builder_add_block.
 *
 * @todo Keep an eye on https://www.drupal.org/project/drupal/issues/3074435
 */
function utexas_layouts_form_layout_builder_add_block_alter(&$form, FormStateInterface $form_state) {
  if (isset($form['settings']['label_display'])) {
    // Uncheck the 'Display title' checkbox by default (on *new* blocks only).
    $form['settings']['label_display']['#default_value'] = FALSE;
  }
}

/**
 * Implements hook_block_view_alter().
 *
 * See See Drupal\utexas_layouts\EventSubscriber\BlockComponentRenderArray for
 * accompanying event subscriber to provide this value for blocks rendered using
 * layout builder.
 */
function utexas_layouts_block_view_alter(array &$build, BlockPluginInterface $block) {
  if (!isset($build['#block'])) {
    // Some modules (e.g., Total Control) do not implement this hook correctly.
    return;
  }
  /** @var Drupal\block\BlockInterface $block_config_entity */
  $block_config_entity = $build['#block'];
  // Add a key/value for the region where the block is being rendered.
  $build['#utexas_layouts_region'] = $block_config_entity->getRegion();
}

/**
 * Implements hook_preprocess_block().
 */
function utexas_layouts_preprocess_block(&$variables) {
  if (!isset($variables['elements']['#utexas_layouts_region'])) {
    // Some modules (e.g., Total Control) do not implement this hook correctly.
    return;
  }
  $base_plugin_id = $variables['base_plugin_id'];
  // Limit to page title blocks placed in the main 'content' region.
  if ($variables['elements']['#utexas_layouts_region'] !== 'content' || $base_plugin_id !== 'page_title_block') {
    return;
  }
  if (UtexasLayoutBuilderHelper::firstSectionIsReadable()) {
    $variables['attributes']['class'][] = 'utexas-readable';
  }
}
