diff --git a/js/linkit.autocomplete.js b/js/linkit.autocomplete.js
index 558278d..f9c2717 100644
--- a/js/linkit.autocomplete.js
+++ b/js/linkit.autocomplete.js
@@ -63,23 +63,36 @@
    *   False to prevent further handlers.
    */
   function selectHandler(event, ui) {
-    var $form = $(event.target).closest('form');
+    var $context = $(event.target).closest('form,fieldset,tr');
     if (!ui.item.path) {
       throw 'Missing path param.' + JSON.stringify(ui.item);
     }

-    $('input[name="href_dirty_check"]', $form).val(ui.item.path);
+    $('input[name="href_dirty_check"]', $context).val(ui.item.path);

     if (ui.item.entity_type_id || ui.item.entity_uuid || ui.item.substitution_id) {
       if (!ui.item.entity_type_id || !ui.item.entity_uuid || !ui.item.substitution_id) {
         throw 'Missing path param.' + JSON.stringify(ui.item);
       }
-
-      $('input[name="attributes[data-entity-type]"]', $form).val(ui.item.entity_type_id);
-      $('input[name="attributes[data-entity-uuid]"]', $form).val(ui.item.entity_uuid);
-      $('input[name="attributes[data-entity-substitution]"]', $form).val(ui.item.substitution_id);
     }
-
+    $('input[name="attributes[href]"], input[name$="[attributes][href]"]', $context).val(ui.item.path);
+    $('input[name="attributes[data-entity-type]"], input[name$="[attributes][data-entity-type]"]', $context).val(ui.item.entity_type_id);
+    $('input[name="attributes[data-entity-uuid]"], input[name$="[attributes][data-entity-uuid]"]', $context).val(ui.item.entity_uuid);
+    $('input[name="attributes[data-entity-substitution]"], input[name$="[attributes][data-entity-substitution]"]', $context).val(ui.item.substitution_id);
+
+    if (ui.item.label) {
+      // Automatically set the link title.
+      var $linkTitle = $(event.target).closest('.form-item').siblings('.form-type-textfield').find('.linkit-widget-title');
+      if ($linkTitle.length > 0) {
+        if (!$linkTitle.val() || $linkTitle.hasClass('link-widget-title--auto')) {
+          // Set value to the label.
+          $linkTitle.val(ui.item.label);
+
+          // Flag title as being automatically set.
+          $linkTitle.addClass('link-widget-title--auto');
+        }
+      }
+    }
     event.target.value = ui.item.path;

     return false;
@@ -169,10 +182,30 @@

         // Use jQuery UI Autocomplete on the textfield.
         $autocomplete.autocomplete(autocomplete.options);
-        $autocomplete.autocomplete('widget').addClass('linkit-ui-autocomplete');

         $autocomplete.click(function () {
-          $autocomplete.autocomplete('search', $autocomplete.val());
+          var $this = $(this);
+          $this.autocomplete('search', $this.val());
+        });
+
+        // Process each item.
+        $autocomplete.each(function () {
+          var $uri = $(this);
+          $uri.autocomplete('widget').addClass('linkit-ui-autocomplete');
+
+          $uri.closest('.form-item').siblings('.form-type-textfield').find('.linkit-widget-title')
+            .each(function () {
+              // Set automatic title flag if title is the same as uri text.
+              var $title = $(this);
+              var uriValue = $uri.val();
+              if (uriValue && uriValue === $title.val()) {
+                $title.addClass('link-widget-title--auto');
+              }
+            })
+            .change(function () {
+              // Remove automatic title flag.
+              $(this).removeClass('link-widget-title--auto');
+            });
         });

         $autocomplete.on('compositionstart.autocomplete', function () {
